version: "3.8"

services:
  db:
    image: postgres
    restart: always
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_ROOT_PASSWORD
      - POSTGRES_DB=$POSTGRES_DATABASE
    ports:
      - "5433:5433"
    volumes:
      - db:/data/postgres
  server:
    build:
      context: ./server
      dockerfile: server.dockerfile
    restart: always
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:postgresql://db:$POSTGRES_DOCKER_PORT/$POSTGRES_DATABASE",
        "spring.datasource.username" : "$POSTGRES_USER",
        "spring.datasource.password" : "$POSTGRES_ROOT_PASSWORD"
      }'
    ports:
      - "8080:8080"
    depends_on:
      - db
  proxy:
    image: nginx:1.23
    restart: unless-stopped
    ports:
      - "8090:8090"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - server
  client:
    build:
      context: ./client
      dockerfile: client.dockerfile
    environment:
      PORT: 4000
      PROXY_API: http://proxy:$NGINX_PROXY_PORT/
    ports:
      - "4000:4000"
    command: npm run serve
    depends_on:
      - server
volumes:
  db: